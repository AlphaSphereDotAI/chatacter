name: Chatecter

on:
    push:
        branches: main

jobs:
    Frontend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Cache
              uses: actions/cache@v4
              with:
                  path: ~/.pub-cache
                  key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
                  restore-keys: ${{ runner.os }}-pub-
            - name: Set up Flutter
              uses: subosito/flutter-action@v2.13.0
              with:
                  channel: "stable"
            - run: flutter pub get
            - run: flutter pub upgrade
            - run: flutter pub outdated
            - run: dart format .
            - run: flutter analyze > flutter_analyze.txt || true
            - name: Dart Analyze to SARIF
              uses: advanced-security/dart-analyzer-sarif@main
              with:
                  input: flutter_analyze.txt
                  output: flutter_analyze.sarif
            - name: Upload SARIF report to DeepSource
              run: |
                  # Install the CLI
                  curl https://deepsource.io/cli | sh
                  # Send the report to DeepSource
                  ./bin/deepsource report --analyzer dart-analyze --analyzer-type community --value-file ./flutter_analyze.sarif
        env:
            DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
    Documentation:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Cache
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: ${{ runner.os }}-pip-
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.x"
            - name: Set up MKDocs
              run: pip install mkdocs mkdocs-material
            - name: Build documentation
              run: mkdocs gh-deploy -v --force
